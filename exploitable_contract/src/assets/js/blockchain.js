import 'regenerator-runtime/runtime'
import * as nearAPI from "near-api-js";
let getConfig = require('./config')

const nearConfig = getConfig('testnet')

window.nearAPI = nearAPI

export function floor(value, decimals=2){
  value = parseFloat(String(value).replace(',', ''))
  let number = Number(Math.floor(value+'e'+decimals)+'e-'+decimals)
  if(isNaN(number)){number = 0}
  return number
}

export function login() {
  walletConnection.requestSignIn(nearConfig.contractName, 'Simple Contract');
}

export function logout() {
  walletConnection.signOut()
  window.location.replace(window.location.origin + window.location.pathname)
}

export async function initNEAR() {
  // Initializing connection to the NEAR node.
  window.near = await nearAPI.connect(Object.assign(nearConfig, {deps:{keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore()}}));

  // Needed to access wallet login
  window.walletConnection = await new nearAPI.WalletConnection(window.near, nearConfig.contractName)
  window.walletAccount = walletConnection.account()

  // Initializing our contract APIs by contract name and configuration.
  window.contract = await near.loadContract(
    nearConfig.contractName,
    {viewMethods: ['get_user', 'get_all_users'],
     changeMethods: ['withdraw_reentrance', 'deposit'],
     sender: window.walletAccount.accountId}
  );
}

export async function deposit(_amount){
  let amount = nearAPI.utils.format.parseNearAmount(_amount.toString())

  const account = window.walletConnection.account()
  account.functionCall(
    nearConfig.contractName, 'deposit', {}, 300000000000000, amount
  )
}

export async function withdraw(amount){
  amount = floor(amount)
  amount = nearAPI.utils.format.parseNearAmount(amount.toString())
  let result = await contract.account.functionCall(
    nearConfig.contractName, 'withdraw_reentrance',
    {amount:amount}, 300000000000000, 0
  )
  return nearAPI.providers.getTransactionLastResult(result)
}

export async function get_all_users(){
  let info = await contract.get_all_users()
  for(let i=0; i<info.length;i++){
    info[i].balance = floor(nearAPI.utils.format.formatNearAmount(info[i].balance))
  }
  return info 
}

export async function get_user(account_id){
  let info = await contract.get_user({user:account_id})
  info.balance = floor(nearAPI.utils.format.formatNearAmount(info.balance))
  return info 
}
